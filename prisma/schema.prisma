// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tbl_admin {
  id_admin  String   @id @unique @default(uuid())
  name      String   @db.VarChar(255)
  username  String   @unique @db.VarChar(255)
  email     String @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users    tbl_user[]
  products tbl_product[]
  discounts tbl_discount[]
  vouchers tbl_voucher[]
}

model tbl_user {
  id_user   String   @id @unique @default(uuid())
  name      String   @db.VarChar(255)
  email     String @db.VarChar(255)
  password  String   @db.VarChar(255)
  points    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  admin     tbl_admin? @relation(fields: [adminId], references: [id_admin])
  adminId   String?
  transactions tbl_transaction[]
}

model tbl_product {
  id_product  String   @id @unique @default(uuid())
  name        String   @db.VarChar(255)
  stock_quantity Int
  description String   @db.VarChar(255)
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  admin       tbl_admin @relation(fields: [adminId], references: [id_admin])
  adminId     String
  discounts   tbl_discount[]
  transactions tbl_transaction[]
}

model tbl_discount {
  id_discount  String   @id @unique @default(uuid())
  type         String   @default("percentage")
  value        Int
  description  String   @db.VarChar(255)
  valid_from   DateTime
  valid_until  DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  admin        tbl_admin @relation(fields: [adminId], references: [id_admin])
  adminId      String
  product      tbl_product @relation(fields: [productId], references: [id_product])
  productId    String
}

model tbl_voucher {
  id_voucher  String   @id @unique @default(uuid())
  code        String   @unique @db.VarChar(255)
  description String   @db.VarChar(255)
  discount_value Int
  valid_from  DateTime
  valid_until DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  admin       tbl_admin @relation(fields: [adminId], references: [id_admin])
  adminId     String
  transactions tbl_transaction[]
}

model tbl_transaction {
  id_transaction  String   @id @unique @default(uuid())
  quantity        Int
  total_price     BigInt
  discount        Int
  final_price     BigInt
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  voucher         tbl_voucher @relation(fields: [voucherId], references: [id_voucher])
  voucherId       String
  user            tbl_user @relation(fields: [userId], references: [id_user])
  userId          String
  product         tbl_product @relation(fields: [productId], references: [id_product])
  productId       String
}

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }
